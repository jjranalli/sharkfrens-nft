/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SharkFrensTest,
  SharkFrensTestInterface,
} from "../SharkFrensTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "address",
        name: "productsModuleAddress_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "slicerId_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Invalid",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSupply",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "NotPurchase",
    type: "error",
  },
  {
    inputs: [],
    name: "NotSuccessful",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongSlicer",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "productId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "_setMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "artworkId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "tokenURI_",
        type: "string",
      },
    ],
    name: "_setTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "productId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "buyerCustomData",
        type: "bytes",
      },
    ],
    name: "isPurchaseAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "isAllowed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "slicerId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "productId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "slicerCustomData",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "buyerCustomData",
        type: "bytes",
      },
    ],
    name: "onProductPurchase",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162001d4638038062001d468339810160408190526200003491620002bc565b8181858581600090805190602001906200005092919062000149565b5080516200006690600190602084019062000149565b5050600680546001600160a01b0319166001600160a01b039490941693909317909255608052506200009f620000993390565b620000f7565b620000ac6002806200034f565b600260005260096020527f6cde3cea4b3a3fb2488b2808bae7556f4a405e50f65e1794383bc026131b13c3805463ffffffff191660ff9290921691909117905550620003c392505050565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620001579062000387565b90600052602060002090601f0160209004810192826200017b5760008555620001c6565b82601f106200019657805160ff1916838001178555620001c6565b82800160010185558215620001c6579182015b82811115620001c6578251825591602001919060010190620001a9565b50620001d4929150620001d8565b5090565b5b80821115620001d45760008155600101620001d9565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200021757600080fd5b81516001600160401b0380821115620002345762000234620001ef565b604051601f8301601f19908116603f011681019082821181831017156200025f576200025f620001ef565b816040528381526020925086838588010111156200027c57600080fd5b600091505b83821015620002a0578582018301518183018401529082019062000281565b83821115620002b25760008385830101525b9695505050505050565b60008060008060808587031215620002d357600080fd5b84516001600160401b0380821115620002eb57600080fd5b620002f98883890162000205565b955060208701519150808211156200031057600080fd5b506200031f8782880162000205565b604087015190945090506001600160a01b03811681146200033f57600080fd5b6060959095015193969295505050565b600060ff821660ff84168160ff04811182151516156200037f57634e487b7160e01b600052601160045260246000fd5b029392505050565b600181811c908216806200039c57607f821691505b602082108103620003bd57634e487b7160e01b600052602260045260246000fd5b50919050565b608051611967620003df6000396000610f7301526119676000f3fe60806040526004361061012a5760003560e01c8063715018a6116100ab578063a23fffb91161006f578063a23fffb914610364578063b88d4fde14610377578063c87b56dd14610397578063e985e9c5146103b7578063ea0875ea146103f2578063f2fde38b1461041257600080fd5b8063715018a6146102dc5780638da5cb5b146102f157806395d89b411461030f57806395db936814610324578063a22cb4651461034457600080fd5b806318160ddd116100f257806318160ddd1461021657806323b872dd1461023957806342842e0e146102595780636352211e1461027957806370a08231146102af57600080fd5b8063015388681461012f57806301ffc9a71461015157806306fdde0314610186578063081812fc146101a8578063095ea7b3146101f6575b600080fd5b34801561013b57600080fd5b5061014f61014a366004611362565b610432565b005b34801561015d57600080fd5b5061017161016c3660046113d3565b610489565b60405190151581526020015b60405180910390f35b34801561019257600080fd5b5061019b6104db565b60405161017d9190611444565b3480156101b457600080fd5b506101de6101c3366004611457565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161017d565b34801561020257600080fd5b5061014f610211366004611487565b610569565b34801561022257600080fd5b5061022b61064b565b60405190815260200161017d565b34801561024557600080fd5b5061014f6102543660046114b1565b6106e1565b34801561026557600080fd5b5061014f6102743660046114b1565b6108a8565b34801561028557600080fd5b506101de610294366004611457565b6003602052600090815260409020546001600160a01b031681565b3480156102bb57600080fd5b5061022b6102ca3660046114ed565b60026020526000908152604090205481565b3480156102e857600080fd5b5061014f610978565b3480156102fd57600080fd5b506007546001600160a01b03166101de565b34801561031b57600080fd5b5061019b6109ae565b34801561033057600080fd5b5061017161033f366004611528565b6109bb565b34801561035057600080fd5b5061014f61035f3660046115b8565b610a3d565b61014f610372366004611528565b610aa9565b34801561038357600080fd5b5061014f6103923660046115f4565b610c20565b3480156103a357600080fd5b5061019b6103b2366004611457565b610ce2565b3480156103c357600080fd5b506101716103d236600461165c565b600560209081526000928352604080842090915290825290205460ff1681565b3480156103fe57600080fd5b5061014f61040d36600461168f565b610e2e565b34801561041e57600080fd5b5061014f61042d3660046114ed565b610e6d565b6007546001600160a01b031633146104655760405162461bcd60e51b815260040161045c906116b1565b60405180910390fd5b600082815260086020908152604090912082516104849284019061122a565b505050565b60006301ffc9a760e01b6001600160e01b0319831614806104ba57506380ac58cd60e01b6001600160e01b03198316145b806104d55750635b5e139f60e01b6001600160e01b03198316145b92915050565b600080546104e8906116e6565b80601f0160208091040260200160405190810160405280929190818152602001828054610514906116e6565b80156105615780601f1061053657610100808354040283529160200191610561565b820191906000526020600020905b81548152906001019060200180831161054457829003601f168201915b505050505081565b6000818152600360205260409020546001600160a01b0316338114806105b257506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b6105ef5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015260640161045c565b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000610658600280611736565b60096020527f6cde3cea4b3a3fb2488b2808bae7556f4a405e50f65e1794383bc026131b13c35460016000527f92e85d02570a8092d09a6e3a57665bc3815a2699a4074001bf1ccabf660f5a365460ff929092169163ffffffff918216916106c29116600261175f565b6106cc919061178b565b6106d691906117b3565b63ffffffff16905090565b6000818152600360205260409020546001600160a01b038481169116146107375760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b604482015260640161045c565b6001600160a01b0382166107815760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b604482015260640161045c565b336001600160a01b03841614806107ae57506000818152600460205260409020546001600160a01b031633145b806107dc57506001600160a01b038316600090815260056020908152604080832033845290915290205460ff165b6108195760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015260640161045c565b6001600160a01b0380841660008181526002602090815260408083208054600019019055938616808352848320805460010190558583526003825284832080546001600160a01b03199081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6108b38383836106e1565b6001600160a01b0382163b158061095c5750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af115801561092c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095091906117d8565b6001600160e01b031916145b6104845760405162461bcd60e51b815260040161045c906117f5565b6007546001600160a01b031633146109a25760405162461bcd60e51b815260040161045c906116b1565b6109ac6000610f08565b565b600180546104e8906116e6565b600080828060200190518101906109d2919061181f565b6040516bffffffffffffffffffffffff19606089901b166020820152909150600090603401604051602081830303815290604052805190602001209050610a3082600960008b81526020019081526020016000206001015483610f5a565b9998505050505050505050565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b85610ab381610f70565b610ac18787878787876109bb565b610ade57604051631eb49d6d60e11b815260040160405180910390fd5b85600103610b86576001600081905260096020527f92e85d02570a8092d09a6e3a57665bc3815a2699a4074001bf1ccabf660f5a365463ffffffff90811690910116610b2a8682610fdb565b610b378660028301610fdb565b506001600081905260096020527f92e85d02570a8092d09a6e3a57665bc3815a2699a4074001bf1ccabf660f5a36805463ffffffff19811663ffffffff91821690930116919091179055610c17565b85600203610c1757600260005260096020527f6cde3cea4b3a3fb2488b2808bae7556f4a405e50f65e1794383bc026131b13c354610bd190869063ffffffff90811660010116610fdb565b600260005260096020527f6cde3cea4b3a3fb2488b2808bae7556f4a405e50f65e1794383bc026131b13c3805463ffffffff8082166001011663ffffffff199091161790555b50505050505050565b610c2b8484846106e1565b6001600160a01b0383163b1580610cc05750604051630a85bd0160e11b808252906001600160a01b0385169063150b7a0290610c719033908990889088906004016118c5565b6020604051808303816000875af1158015610c90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb491906117d8565b6001600160e01b031916145b610cdc5760405162461bcd60e51b815260040161045c906117f5565b50505050565b6060610cef600280611736565b60ff16821115610db457600360005260086020527f625b35f5e76f098dd7c3a05b10e2e5e78a4a01228d60c3b143426cdf36d264558054610d2f906116e6565b80601f0160208091040260200160405190810160405280929190818152602001828054610d5b906116e6565b8015610da85780601f10610d7d57610100808354040283529160200191610da8565b820191906000526020600020905b815481529060010190602001808311610d8b57829003601f168201915b50505050509050919050565b6002821115610df357600260005260086020527f6add646517a5b0f6793cd5891b7937d28a5b2981a5d88ebc7cd776088fea90418054610d2f906116e6565b600160005260086020527fad67d757c34507f157cacfa2e3153e9f260a2244f30428821be7be64587ac55f8054610d2f906116e6565b919050565b6007546001600160a01b03163314610e585760405162461bcd60e51b815260040161045c906116b1565b60009182526009602052604090912060010155565b6007546001600160a01b03163314610e975760405162461bcd60e51b815260040161045c906116b1565b6001600160a01b038116610efc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161045c565b610f0581610f08565b50565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600082610f6785846110ab565b14949350505050565b807f000000000000000000000000000000000000000000000000000000000000000014610fb057604051632eafdb6960e01b815260040160405180910390fd5b6006546001600160a01b03163314610f05576040516347322d0360e01b815260040160405180910390fd5b610fe5828261111f565b6001600160a01b0382163b158061108b5750604051630a85bd0160e11b80825233600483015260006024830181905260448301849052608060648401526084830152906001600160a01b0384169063150b7a029060a4016020604051808303816000875af115801561105b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061107f91906117d8565b6001600160e01b031916145b6110a75760405162461bcd60e51b815260040161045c906117f5565b5050565b600081815b84518110156111175760008582815181106110cd576110cd611902565b602002602001015190508083116110f35760008381526020829052604090209250611104565b600081815260208490526040902092505b508061110f81611918565b9150506110b0565b509392505050565b6001600160a01b0382166111695760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b604482015260640161045c565b6000818152600360205260409020546001600160a01b0316156111bf5760405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b604482015260640161045c565b6001600160a01b038216600081815260026020908152604080832080546001019055848352600390915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b828054611236906116e6565b90600052602060002090601f016020900481019282611258576000855561129e565b82601f1061127157805160ff191683800117855561129e565b8280016001018555821561129e579182015b8281111561129e578251825591602001919060010190611283565b506112aa9291506112ae565b5090565b5b808211156112aa57600081556001016112af565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611302576113026112c3565b604052919050565b600067ffffffffffffffff831115611324576113246112c3565b611337601f8401601f19166020016112d9565b905082815283838301111561134b57600080fd5b828260208301376000602084830101529392505050565b6000806040838503121561137557600080fd5b82359150602083013567ffffffffffffffff81111561139357600080fd5b8301601f810185136113a457600080fd5b6113b38582356020840161130a565b9150509250929050565b6001600160e01b031981168114610f0557600080fd5b6000602082840312156113e557600080fd5b81356113f0816113bd565b9392505050565b6000815180845260005b8181101561141d57602081850181015186830182015201611401565b8181111561142f576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006113f060208301846113f7565b60006020828403121561146957600080fd5b5035919050565b80356001600160a01b0381168114610e2957600080fd5b6000806040838503121561149a57600080fd5b6114a383611470565b946020939093013593505050565b6000806000606084860312156114c657600080fd5b6114cf84611470565b92506114dd60208501611470565b9150604084013590509250925092565b6000602082840312156114ff57600080fd5b6113f082611470565b600082601f83011261151957600080fd5b6113f08383356020850161130a565b60008060008060008060c0878903121561154157600080fd5b863595506020870135945061155860408801611470565b935060608701359250608087013567ffffffffffffffff8082111561157c57600080fd5b6115888a838b01611508565b935060a089013591508082111561159e57600080fd5b506115ab89828a01611508565b9150509295509295509295565b600080604083850312156115cb57600080fd5b6115d483611470565b9150602083013580151581146115e957600080fd5b809150509250929050565b6000806000806080858703121561160a57600080fd5b61161385611470565b935061162160208601611470565b925060408501359150606085013567ffffffffffffffff81111561164457600080fd5b61165087828801611508565b91505092959194509250565b6000806040838503121561166f57600080fd5b61167883611470565b915061168660208401611470565b90509250929050565b600080604083850312156116a257600080fd5b50508035926020909101359150565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600181811c908216806116fa57607f821691505b60208210810361171a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168160ff048111821515161561175757611757611720565b029392505050565b600063ffffffff8083168185168183048111821515161561178257611782611720565b02949350505050565b600063ffffffff8083168185168083038211156117aa576117aa611720565b01949350505050565b600063ffffffff838116908316818110156117d0576117d0611720565b039392505050565b6000602082840312156117ea57600080fd5b81516113f0816113bd565b60208082526010908201526f155394d0519157d49150d2541251539560821b604082015260600190565b6000602080838503121561183257600080fd5b825167ffffffffffffffff8082111561184a57600080fd5b818501915085601f83011261185e57600080fd5b815181811115611870576118706112c3565b8060051b91506118818483016112d9565b818152918301840191848101908884111561189b57600080fd5b938501935b838510156118b9578451825293850193908501906118a0565b98975050505050505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906118f8908301846113f7565b9695505050505050565b634e487b7160e01b600052603260045260246000fd5b60006001820161192a5761192a611720565b506001019056fea26469706673582212206df7af376f8f9770b721e024f209d368ca39ca9fd588048783a187613e34d47864736f6c634300080d0033";

type SharkFrensTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SharkFrensTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SharkFrensTest__factory extends ContractFactory {
  constructor(...args: SharkFrensTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "SharkFrensTest";
  }

  deploy(
    name_: string,
    symbol_: string,
    productsModuleAddress_: string,
    slicerId_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SharkFrensTest> {
    return super.deploy(
      name_,
      symbol_,
      productsModuleAddress_,
      slicerId_,
      overrides || {}
    ) as Promise<SharkFrensTest>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    productsModuleAddress_: string,
    slicerId_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      symbol_,
      productsModuleAddress_,
      slicerId_,
      overrides || {}
    );
  }
  attach(address: string): SharkFrensTest {
    return super.attach(address) as SharkFrensTest;
  }
  connect(signer: Signer): SharkFrensTest__factory {
    return super.connect(signer) as SharkFrensTest__factory;
  }
  static readonly contractName: "SharkFrensTest";
  public readonly contractName: "SharkFrensTest";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SharkFrensTestInterface {
    return new utils.Interface(_abi) as SharkFrensTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SharkFrensTest {
    return new Contract(address, _abi, signerOrProvider) as SharkFrensTest;
  }
}
